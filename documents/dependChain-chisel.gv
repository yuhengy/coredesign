digraph G {
  //"common.configuration" -> "mycore.decode.regfile", "sim.diffTestIO", "common.memReadIO", "common.memWriteIO", "mycore.instFetch.instFetchTOP", "mycore.decode.decodeTOP";
  //"common.constants" -> "mycore.decode.regfile", "sim.diffTestIO", "mycore.instFetch.instFetchTOP", "mycore.decode.decoder", "mycore.decode.decodeTOP";
  "common.instructions" -> "mycore.decode.decoder";
  "mycore.decode.regfile" -> "mycore.decode.decodeTOP";
  "mycore.mycoreTOP" -> "sim.simTOP";
  "sim.diffTestIO" -> "sim.simTOP";

  "common.memReadIO" -> "mycore.mycoreTOPIO", "mycore.instFetch.instFetchTOP", "mycore.execute.executeTOP";
  "common.memWriteIO" -> "mycore.mycoreTOPIO", "mycore.execute.executeTOP";
  "mycore.mycoreTOPIO" -> "mycore.mycoreTOP", "sim.simTOP";

  "chisel3.util.experimental.BoringUtils" [style=dotted];
  //"chisel3.util.log2Ceil" [style=dotted];
  "chisel3.util.ListLookup" [style=dotted];
  "chisel3.util.MuxCase" [style=dotted];
  "chisel3.util.experimental.BoringUtils" -> "mycore.decode.regfile", "sim.simTOP" [style=dotted];
  //"chisel3.util.log2Ceil" -> "common.constants" [style=dotted];
  "chisel3.util.ListLookup" -> "mycore.decode.decoder" [style=dotted];
  "chisel3.util.MuxCase" -> "mycore.decode.decodeTOP" [style=dotted];

  "sim.simTOP" [style=filled];
  "mycore.mycoreTOP" [style=filled];
  "mycore.instFetch.instFetchTOP" [style=filled];
  "mycore.decode.decodeTOP" [style=filled];
  "mycore.decode.regfile" [style=filled];
  "mycore.decode.decoder" [style=filled];
  "mycore.execute.executeTOP" [style=filled];
  "mycore.execute.alu" [style=filled];
  "mycore.memory.memoryTOP" [style=filled];
  "mycore.writeBack.writeBackTOP" [style=filled];
  "mycore.instFetch.instFetchTOP" -> "mycore.mycoreTOP";
  "mycore.decode.decodeTOP" -> "mycore.mycoreTOP";
  "mycore.execute.executeTOP" -> "mycore.mycoreTOP";
  "mycore.memory.memoryTOP" -> "mycore.mycoreTOP";
  "mycore.writeBack.writeBackTOP" -> "mycore.mycoreTOP";

  "mycore.decode.allCtrlIO" -> "mycore.decode.decoder", "mycore.decode.decodeTOP";
  "mycore.decode.decoder" -> "mycore.decode.decodeTOP";

  "mycore.execute.decToExeData/CtrlIO" -> "mycore.decode.decodeTOP", "mycore.execute.executeTOP";
  "mycore.memory.exeToMemData/CtrlIO" -> "mycore.execute.executeTOP", "mycore.memory.memoryTOP";
  "mycore.writeBack.memToExeData/CtrlIO" -> "mycore.memory.memoryTOP", "mycore.writeBack.writeBackTOP";

  "mycore.execute.alu" -> "mycore.execute.executeTOP";




  // Legend
  subgraph cluster1 {
    "chisel lib" [style=dotted];
    "my Module" [style=filled];
    "my Boudle";

    label = "Legend";
    style=bold;
    color = "orange";
  }
}

// TODO: Add main Object `elaborate` which is runned by sbt to generate .v files.
//       This will be helpful to keep *how sbt works* in mind .

// NOTE: We ignore `chisel3._` for simplicity and ignore `scala.language.reflectiveCalls`
// NOTE: We remove "common.configuration" and "common.constants" for simplicity.
